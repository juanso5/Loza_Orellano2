'use client';import { useMemo } from 'react';// Componentes espec√≠ficos para cada estrategia - Updatedconst JubilacionCard = ({ data }) => {  const { metadata, fecha_alta, rend_esperado, valor_total_fondo, rendimiento_real } = data;  const fechaCreacion = new Date(fecha_alta);  const fechaEstimada = new Date(fecha_alta);  const anos = metadata?.anos || metadata?.plazo_anos || 0;  fechaEstimada.setFullYear(fechaEstimada.getFullYear() + anos);  return (    <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>      {/* Fila superior: Objetivo y Patrimonio */}      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0.75rem' }}>        <div style={{           backgroundColor: '#f0f9ff',           padding: '0.875rem',           borderRadius: '8px',          border: '1px solid #bae6fd'        }}>          <div style={{ fontSize: '0.75rem', color: '#0369a1', fontWeight: '500', marginBottom: '0.25rem' }}>            <i className="fas fa-calendar-alt" style={{ marginRight: '0.375rem' }} />            Objetivo: {anos} a√±os          </div>          <div style={{ fontSize: '0.9375rem', fontWeight: '600', color: '#0c4a6e' }}>            {fechaEstimada.toLocaleDateString('es-AR')}          </div>          <div style={{ fontSize: '0.6875rem', color: '#0284c7', marginTop: '0.125rem' }}>            Creado: {fechaCreacion.toLocaleDateString('es-AR')}          </div>        </div>        <div style={{           backgroundColor: '#f0fdf4',           padding: '0.875rem',           borderRadius: '8px',          border: '1px solid #bbf7d0'        }}>          <div style={{ fontSize: '0.75rem', color: '#15803d', fontWeight: '500', marginBottom: '0.25rem' }}>            Patrimonio (USD)          </div>          <div style={{ fontSize: '1.125rem', fontWeight: '700', color: '#166534' }}>            ${Number(valor_total_fondo || 0).toLocaleString('es-AR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}          </div>        </div>      </div>      {/* Fila inferior: Rendimientos */}      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0.75rem' }}>        <div style={{           textAlign: 'center',           padding: '0.75rem',           backgroundColor: '#fafafa',           borderRadius: '6px',          border: '1px solid #e5e7eb'        }}>          <div style={{ fontSize: '0.75rem', color: '#6b7280', marginBottom: '0.25rem' }}>            Rend. Esperado          </div>          <div style={{ fontSize: '1rem', fontWeight: '600', color: '#111827' }}>            {rend_esperado ? `${Number(rend_esperado).toFixed(2)}%` : 'N/A'}          </div>        </div>        <div style={{           textAlign: 'center',           padding: '0.75rem',           backgroundColor: '#fafafa',           borderRadius: '6px',          border: '1px solid #e5e7eb'        }}>          <div style={{ fontSize: '0.75rem', color: '#6b7280', marginBottom: '0.25rem' }}>            √çndice Calculado          </div>          <div style={{             fontSize: '1rem',             fontWeight: '600',             color: rendimiento_real >= 0 ? '#15803d' : '#dc2626'          }}>            {Number(rendimiento_real || 0).toFixed(2)}%          </div>        </div>      </div>    </div>  );};const ViajesCard = ({ data }) => {  const { metadata, valor_total_fondo, rendimiento_real, tipo_cartera } = data;  // Soporta ambos formatos: legacy (monto_objetivo + moneda) y nuevo (monto_objetivo_usd + tipo_cambio)  const monto_objetivo_usd = metadata?.monto_objetivo_usd || (metadata?.moneda === 'USD' ? metadata?.monto_objetivo : 0) || 0;  const tipo_cambio = metadata?.tipo_cambio || null;  const monto_objetivo_ars = metadata?.monto_objetivo_ars || (tipo_cambio ? monto_objetivo_usd * tipo_cambio : 0);  const destino = metadata?.destino || metadata?.comentario || 'Viaje';  const getProgressColor = (progreso) => {    if (progreso >= 100) return '#22c55e';    if (progreso >= 75) return '#84cc16';    if (progreso >= 50) return '#eab308';    if (progreso >= 25) return '#f97316';    return '#3b82f6';  };  return (    <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>      {/* Objetivo */}      <div style={{         backgroundColor: '#fff7ed',         padding: '1rem',         borderRadius: '8px',        border: '1px solid #fed7aa'      }}>        <div style={{ fontSize: '0.75rem', color: '#c2410c', fontWeight: '500', marginBottom: '0.5rem' }}>          <i className="fas fa-bullseye" style={{ marginRight: '0.375rem' }} />          OBJETIVO - {destino}        </div>        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0.75rem' }}>          {/* USD */}          <div>            <div style={{ fontSize: '0.65rem', color: '#9a3412', fontWeight: '500', marginBottom: '0.125rem' }}>              üíµ USD            </div>            <div style={{ fontSize: '1.125rem', fontWeight: '700', color: '#7c2d12', lineHeight: '1.2' }}>              ${Number(monto_objetivo_usd).toLocaleString('es-AR', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}            </div>          </div>          {/* ARS (si hay TC) */}          {monto_objetivo_ars > 0 && tipo_cambio && (            <div>              <div style={{ fontSize: '0.65rem', color: '#9a3412', fontWeight: '500', marginBottom: '0.125rem' }}>                üíµ ARS              </div>              <div style={{ fontSize: '1.125rem', fontWeight: '700', color: '#7c2d12', lineHeight: '1.2' }}>                ${Number(monto_objetivo_ars).toLocaleString('es-AR', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}              </div>              <div style={{ fontSize: '0.6rem', color: '#c2410c', marginTop: '0.125rem' }}>                TC: ${tipo_cambio.toLocaleString('es-AR')}              </div>            </div>          )}        </div>      </div>      {/* Patrimonio */}      <div style={{         backgroundColor: '#ecfdf5',         padding: '1rem',         borderRadius: '8px',        border: '1px solid #a7f3d0'      }}>        <div style={{ fontSize: '0.75rem', color: '#047857', fontWeight: '500', marginBottom: '0.5rem' }}>          <i className="fas fa-wallet" style={{ marginRight: '0.375rem' }} />          PATRIMONIO ACTUAL        </div>        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0.75rem' }}>          {/* USD */}          <div>            <div style={{ fontSize: '0.65rem', color: '#065f46', fontWeight: '500', marginBottom: '0.125rem' }}>              üí∞ USD            </div>            <div style={{ fontSize: '1.25rem', fontWeight: '800', color: '#047857', lineHeight: '1.2' }}>              ${Number(valor_total_fondo || 0).toLocaleString('es-AR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}            </div>          </div>          {/* ARS (si hay TC) */}          {tipo_cambio > 0 && (            <div>              <div style={{ fontSize: '0.65rem', color: '#065f46', fontWeight: '500', marginBottom: '0.125rem' }}>                üí∞ ARS (equiv.)              </div>              <div style={{ fontSize: '1.25rem', fontWeight: '800', color: '#047857', lineHeight: '1.2' }}>                ${Number((valor_total_fondo || 0) * tipo_cambio).toLocaleString('es-AR', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}              </div>            </div>          )}        </div>      </div>      {/* Barras de progreso por moneda */}      {monto_objetivo_usd > 0 && (        <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>            <span style={{ fontSize: '0.8125rem', color: '#6b7280', fontWeight: '500' }}>              <i className="fas fa-chart-line" style={{ marginRight: '0.375rem' }} />              Progreso USD            </span>            <span style={{ fontSize: '0.875rem', fontWeight: '600', color: '#111827' }}>              {((valor_total_fondo / monto_objetivo_usd) * 100).toFixed(1)}%            </span>          </div>          <div style={{             width: '100%',             backgroundColor: '#e5e7eb',             borderRadius: '9999px',             height: '12px',             overflow: 'hidden',            border: '1px solid #d1d5db'          }}>            <div              style={{                 height: '12px',                 borderRadius: '9999px',                 transition: 'width 0.3s ease',                backgroundColor: getProgressColor((valor_total_fondo / monto_objetivo_usd) * 100),                width: `${Math.min((valor_total_fondo / monto_objetivo_usd) * 100, 100)}%`              }}            />          </div>        </div>      )}      {monto_objetivo_ars > 0 && tipo_cambio && (        <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>            <span style={{ fontSize: '0.8125rem', color: '#6b7280', fontWeight: '500' }}>              <i className="fas fa-chart-line" style={{ marginRight: '0.375rem' }} />              Progreso ARS            </span>            <span style={{ fontSize: '0.875rem', fontWeight: '600', color: '#111827' }}>              {((valor_total_fondo * tipo_cambio / monto_objetivo_ars) * 100).toFixed(1)}%            </span>          </div>          <div style={{             width: '100%',             backgroundColor: '#e5e7eb',             borderRadius: '9999px',             height: '12px',             overflow: 'hidden',            border: '1px solid #d1d5db'          }}>            <div              style={{                 height: '12px',                 borderRadius: '9999px',                 transition: 'width 0.3s ease',                backgroundColor: getProgressColor((valor_total_fondo * tipo_cambio / monto_objetivo_ars) * 100),                width: `${Math.min((valor_total_fondo * tipo_cambio / monto_objetivo_ars) * 100, 100)}%`              }}            />          </div>          <div style={{ fontSize: '0.6875rem', color: '#9ca3af', fontStyle: 'italic', textAlign: 'right' }}>            * TC definido: 1 USD = ${tipo_cambio.toLocaleString('es-AR')} ARS          </div>        </div>      )}      {/* Rendimiento */}      <div style={{         textAlign: 'center',         padding: '0.75rem',         backgroundColor: '#fafafa',         borderRadius: '6px',        border: '1px solid #e5e7eb'      }}>        <div style={{ fontSize: '0.75rem', color: '#6b7280', marginBottom: '0.25rem' }}>          Rendimiento Real        </div>        <div style={{           fontSize: '1rem',           fontWeight: '600',           color: rendimiento_real >= 0 ? '#15803d' : '#dc2626'        }}>          {Number(rendimiento_real || 0).toFixed(2)}%        </div>      </div>    </div>  );};const LargoPlazoCard = ({ data }) => {  const { tipo_cartera, rendimiento_real, valor_total_fondo, fecha_alta } = data;  const fechaCreacion = fecha_alta ? new Date(fecha_alta) : null;  const nombre_cartera = tipo_cartera?.descripcion || 'Largo Plazo';  return (    <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>      {/* Rendimiento destacado */}      <div style={{         backgroundColor: '#eff6ff',         padding: '1.25rem',         borderRadius: '10px',         textAlign: 'center',        border: '2px solid #bfdbfe'      }}>        <div style={{           display: 'flex',           alignItems: 'center',           justifyContent: 'center',          gap: '0.5rem',          marginBottom: '0.5rem'        }}>          <i className="fas fa-chart-area" style={{ color: '#2563eb', fontSize: '1.125rem' }} />          <div style={{ fontSize: '0.875rem', color: '#1e40af', fontWeight: '500' }}>            Rendimiento Real          </div>        </div>        <div style={{           fontSize: '2rem',           fontWeight: '700',           color: rendimiento_real >= 0 ? '#15803d' : '#dc2626'        }}>          {Number(rendimiento_real || 0).toFixed(2)}%        </div>      </div>      {/* Informaci√≥n adicional */}      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0.75rem' }}>        <div style={{           textAlign: 'center',           padding: '0.75rem',           backgroundColor: '#f0fdf4',           borderRadius: '6px',          border: '1px solid #bbf7d0'        }}>          <div style={{ fontSize: '0.75rem', color: '#15803d', marginBottom: '0.25rem' }}>            Patrimonio          </div>          <div style={{ fontSize: '0.9375rem', fontWeight: '600', color: '#166534' }}>            ${Number(valor_total_fondo || 0).toLocaleString('es-AR', { maximumFractionDigits: 0 })}          </div>        </div>        {fechaCreacion && (          <div style={{             textAlign: 'center',             padding: '0.75rem',             backgroundColor: '#fafafa',             borderRadius: '6px',            border: '1px solid #e5e7eb'          }}>            <div style={{ fontSize: '0.75rem', color: '#6b7280', marginBottom: '0.25rem' }}>              Creado            </div>            <div style={{ fontSize: '0.8125rem', fontWeight: '600', color: '#111827' }}>              {fechaCreacion.toLocaleDateString('es-AR')}            </div>          </div>        )}      </div>      {/* Descripci√≥n */}      <div style={{         textAlign: 'center',         fontSize: '0.8125rem',         color: '#6b7280',        fontStyle: 'italic',        padding: '0.5rem'      }}>        <i className="fas fa-seedling" style={{ marginRight: '0.375rem' }} />        Inversi√≥n estrat√©gica a largo plazo      </div>    </div>  );};const ObjetivoCard = ({ data }) => {  const { metadata, valor_total_fondo, rendimiento_real, tipo_cartera } = data;  // Soporta ambos formatos: legacy (monto_objetivo + moneda) y nuevo (monto_objetivo_usd + tipo_cambio)  const monto_objetivo_usd = metadata?.monto_objetivo_usd || (metadata?.moneda === 'USD' ? metadata?.monto_objetivo : 0) || 0;  const tipo_cambio = metadata?.tipo_cambio || null;  const monto_objetivo_ars = metadata?.monto_objetivo_ars || (tipo_cambio ? monto_objetivo_usd * tipo_cambio : 0);  const fecha_objetivo = metadata?.fecha_objetivo ? new Date(metadata.fecha_objetivo) : null;  const diasRestantes = fecha_objetivo ? Math.ceil((fecha_objetivo - new Date()) / (1000 * 60 * 60 * 24)) : 0;  const nombre_objetivo = metadata?.nombre_objetivo || metadata?.comentario || 'Meta financiera';  const getProgressColor = (progreso) => {    if (progreso >= 100) return '#22c55e';    if (progreso >= 75) return '#84cc16';    if (progreso >= 50) return '#eab308';    if (progreso >= 25) return '#f97316';    return '#a855f7';  };  return (    <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>      {/* Fecha y d√≠as restantes */}      {fecha_objetivo && (        <div style={{           padding: '0.75rem',          backgroundColor: diasRestantes > 30 ? '#eff6ff' : diasRestantes > 0 ? '#fff7ed' : '#fee2e2',          border: `1px solid ${diasRestantes > 30 ? '#bfdbfe' : diasRestantes > 0 ? '#fed7aa' : '#fecaca'}`,          borderRadius: '6px',          display: 'flex',          justifyContent: 'space-between',          alignItems: 'center'        }}>          <div>            <div style={{ fontSize: '0.65rem', color: '#6b7280', fontWeight: '500', marginBottom: '0.125rem' }}>              üìÖ FECHA OBJETIVO            </div>            <div style={{ fontSize: '0.875rem', fontWeight: '700', color: '#111827' }}>              {fecha_objetivo.toLocaleDateString('es-AR', { day: 'numeric', month: 'short', year: 'numeric' })}            </div>          </div>          <div style={{             padding: '0.5rem 0.75rem',            borderRadius: '6px',            backgroundColor: diasRestantes > 30 ? '#dbeafe' : diasRestantes > 0 ? '#fed7aa' : '#fecaca',            fontSize: '0.75rem',            fontWeight: '700',            color: diasRestantes > 30 ? '#1e40af' : diasRestantes > 0 ? '#9a3412' : '#991b1b'          }}>            {diasRestantes > 0 ? `${diasRestantes} d√≠as` : 'Vencido'}          </div>        </div>      )}      {/* Objetivo */}      <div style={{         backgroundColor: '#faf5ff',         padding: '1rem',         borderRadius: '8px',        border: '1px solid #e9d5ff'      }}>        <div style={{ fontSize: '0.75rem', color: '#7e22ce', fontWeight: '500', marginBottom: '0.5rem' }}>          <i className="fas fa-bullseye" style={{ marginRight: '0.375rem' }} />          OBJETIVO - {nombre_objetivo}        </div>        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0.75rem' }}>          {/* USD */}          <div>            <div style={{ fontSize: '0.65rem', color: '#6b21a8', fontWeight: '500', marginBottom: '0.125rem' }}>              üíµ USD            </div>            <div style={{ fontSize: '1.125rem', fontWeight: '700', color: '#7e22ce', lineHeight: '1.2' }}>              ${Number(monto_objetivo_usd).toLocaleString('es-AR', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}            </div>          </div>          {/* ARS (si hay TC) */}          {monto_objetivo_ars > 0 && tipo_cambio && (            <div>              <div style={{ fontSize: '0.65rem', color: '#6b21a8', fontWeight: '500', marginBottom: '0.125rem' }}>                üíµ ARS              </div>              <div style={{ fontSize: '1.125rem', fontWeight: '700', color: '#7e22ce', lineHeight: '1.2' }}>                ${Number(monto_objetivo_ars).toLocaleString('es-AR', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}              </div>              <div style={{ fontSize: '0.6rem', color: '#9333ea', marginTop: '0.125rem' }}>                TC: ${tipo_cambio.toLocaleString('es-AR')}              </div>            </div>          )}        </div>      </div>      {/* Patrimonio */}      <div style={{         backgroundColor: '#ecfdf5',         padding: '1rem',         borderRadius: '8px',        border: '1px solid #a7f3d0'      }}>        <div style={{ fontSize: '0.75rem', color: '#047857', fontWeight: '500', marginBottom: '0.5rem' }}>          <i className="fas fa-wallet" style={{ marginRight: '0.375rem' }} />          PATRIMONIO ACTUAL        </div>        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0.75rem' }}>          {/* USD */}          <div>            <div style={{ fontSize: '0.65rem', color: '#065f46', fontWeight: '500', marginBottom: '0.125rem' }}>              üí∞ USD            </div>            <div style={{ fontSize: '1.25rem', fontWeight: '800', color: '#047857', lineHeight: '1.2' }}>              ${Number(valor_total_fondo || 0).toLocaleString('es-AR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}            </div>          </div>          {/* ARS (si hay TC) */}          {tipo_cambio > 0 && (            <div>              <div style={{ fontSize: '0.65rem', color: '#065f46', fontWeight: '500', marginBottom: '0.125rem' }}>                üí∞ ARS (equiv.)              </div>              <div style={{ fontSize: '1.25rem', fontWeight: '800', color: '#047857', lineHeight: '1.2' }}>                ${Number((valor_total_fondo || 0) * tipo_cambio).toLocaleString('es-AR', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}              </div>            </div>          )}        </div>      </div>      {/* Barras de progreso por moneda */}      {monto_objetivo_usd > 0 && (        <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>            <span style={{ fontSize: '0.8125rem', color: '#6b7280', fontWeight: '500' }}>              <i className="fas fa-chart-line" style={{ marginRight: '0.375rem' }} />              Progreso USD            </span>            <span style={{ fontSize: '0.875rem', fontWeight: '600', color: '#111827' }}>              {((valor_total_fondo / monto_objetivo_usd) * 100).toFixed(1)}%            </span>          </div>          <div style={{             width: '100%',             backgroundColor: '#e5e7eb',             borderRadius: '9999px',             height: '12px',             overflow: 'hidden',            border: '1px solid #d1d5db'          }}>            <div              style={{                 height: '12px',                 borderRadius: '9999px',                 transition: 'width 0.3s ease',                backgroundColor: getProgressColor((valor_total_fondo / monto_objetivo_usd) * 100),                width: `${Math.min((valor_total_fondo / monto_objetivo_usd) * 100, 100)}%`              }}            />          </div>        </div>      )}      {monto_objetivo_ars > 0 && tipo_cambio && (        <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>            <span style={{ fontSize: '0.8125rem', color: '#6b7280', fontWeight: '500' }}>              <i className="fas fa-chart-line" style={{ marginRight: '0.375rem' }} />              Progreso ARS            </span>            <span style={{ fontSize: '0.875rem', fontWeight: '600', color: '#111827' }}>              {((valor_total_fondo * tipo_cambio / monto_objetivo_ars) * 100).toFixed(1)}%            </span>          </div>          <div style={{             width: '100%',             backgroundColor: '#e5e7eb',             borderRadius: '9999px',             height: '12px',             overflow: 'hidden',            border: '1px solid #d1d5db'          }}>            <div              style={{                 height: '12px',                 borderRadius: '9999px',                 transition: 'width 0.3s ease',                backgroundColor: getProgressColor((valor_total_fondo * tipo_cambio / monto_objetivo_ars) * 100),                width: `${Math.min((valor_total_fondo * tipo_cambio / monto_objetivo_ars) * 100, 100)}%`              }}            />          </div>          <div style={{ fontSize: '0.6875rem', color: '#9ca3af', fontStyle: 'italic', textAlign: 'right' }}>            * TC definido: 1 USD = ${tipo_cambio.toLocaleString('es-AR')} ARS          </div>        </div>      )}      {/* Fecha objetivo */}      {fecha_objetivo && (        <div style={{           display: 'flex',          alignItems: 'center',          justifyContent: 'space-between',          padding: '0.75rem',           backgroundColor: '#f0f9ff',           borderRadius: '6px',          border: '1px solid #bae6fd'        }}>          <div>            <div style={{ fontSize: '0.75rem', color: '#0369a1', marginBottom: '0.125rem' }}>              Fecha Objetivo            </div>            <div style={{ fontSize: '0.9375rem', fontWeight: '600', color: '#0c4a6e' }}>              {fecha_objetivo.toLocaleDateString('es-AR', {                 day: 'numeric',                 month: 'long',                 year: 'numeric'               })}            </div>          </div>          <div style={{             width: '36px',            height: '36px',            borderRadius: '50%',            backgroundColor: diasRestantes > 30 ? '#0ea5e9' : diasRestantes > 0 ? '#f97316' : '#dc2626',            display: 'flex',            alignItems: 'center',            justifyContent: 'center'          }}>            <i               className={`fas fa-${diasRestantes > 30 ? 'check' : diasRestantes > 0 ? 'hourglass-half' : 'times'}`}               style={{ color: '#fff', fontSize: '1rem' }}            />          </div>        </div>      )}      {/* Rendimiento */}      <div style={{         textAlign: 'center',         padding: '0.75rem',         backgroundColor: '#fafafa',         borderRadius: '6px',        border: '1px solid #e5e7eb'      }}>        <div style={{ fontSize: '0.75rem', color: '#6b7280', marginBottom: '0.25rem' }}>          Rendimiento Real        </div>        <div style={{           fontSize: '1rem',           fontWeight: '600',           color: rendimiento_real >= 0 ? '#15803d' : '#dc2626'        }}>          {Number(rendimiento_real || 0).toFixed(2)}%        </div>      </div>    </div>  );};// Componente principal que decide qu√© card mostrarexport default function EstrategiaCard({ data, onAsignar, onVerDetalle }) {  const estrategia = useMemo(() => {    // Prioridad: 1. metadata.estrategia, 2. tipo_cartera.categoria    return (data.metadata?.estrategia || data.tipo_cartera?.categoria || '').toLowerCase();  }, [data.metadata?.estrategia, data.tipo_cartera?.categoria]);  const CardComponent = useMemo(() => {    switch (estrategia) {      case 'jubilacion': return JubilacionCard;      case 'viajes': return ViajesCard;      case 'largo_plazo': return LargoPlazoCard;      case 'objetivo': return ObjetivoCard;      default: return null;    }  }, [estrategia]);  const getIconAndColor = () => {    const configs = {      'jubilacion': { icon: 'umbrella-beach', color: '#10b981' },      'viajes': { icon: 'plane-departure', color: '#f97316' },      'largo_plazo': { icon: 'chart-line', color: '#3b82f6' },      'objetivo': { icon: 'bullseye', color: '#a855f7' }    };    return configs[estrategia] || { icon: 'wallet', color: '#6b7280' };  };  const getEstrategiaNombre = () => {    const nombres = {      'jubilacion': 'Jubilaci√≥n',      'viajes': 'Viajes',      'largo_plazo': 'Largo Plazo',      'objetivo': 'Objetivo'    };    return nombres[estrategia] || 'General';  };  const { icon, color } = getIconAndColor();  const nombre_cartera = data.tipo_cartera?.descripcion || getEstrategiaNombre();  if (!CardComponent) {    // Si no hay estrategia definida, mostrar card gen√©rica    return (      <div style={{        backgroundColor: '#fff',        borderRadius: '12px',        boxShadow: '0 1px 3px rgba(0,0,0,0.1)',        border: '1px solid #e5e7eb',        padding: '1.5rem',        transition: 'all 0.2s'      }}>        <div style={{ textAlign: 'center', color: '#9ca3af' }}>          <i className="fas fa-folder-open" style={{ fontSize: '2rem', marginBottom: '0.5rem', color: '#d1d5db' }} />          <p style={{ fontSize: '0.875rem', margin: '0.5rem 0' }}>Estrategia no configurada</p>          <p style={{ fontSize: '0.75rem', color: '#d1d5db' }}>Fondo ID: {data.id_fondo}</p>        </div>      </div>    );  }  return (    <div       style={{        backgroundColor: '#fff',        borderRadius: '12px',        boxShadow: '0 1px 3px rgba(0,0,0,0.1)',        border: `2px solid ${color}`,        padding: '1.5rem',        transition: 'all 0.2s',        cursor: 'pointer'      }}      onMouseEnter={(e) => {        e.currentTarget.style.boxShadow = '0 8px 16px rgba(0,0,0,0.15)';        e.currentTarget.style.transform = 'translateY(-2px)';      }}      onMouseLeave={(e) => {        e.currentTarget.style.boxShadow = '0 1px 3px rgba(0,0,0,0.1)';        e.currentTarget.style.transform = 'translateY(0)';      }}    >      {/* Header */}      <div style={{ display: 'flex', alignItems: 'center', gap: '0.75rem', marginBottom: '1.25rem' }}>        <div style={{           padding: '0.625rem',           borderRadius: '10px',           backgroundColor: `${color}15`,          display: 'flex',          alignItems: 'center',          justifyContent: 'center',          width: '42px',          height: '42px'        }}>          <i className={`fas fa-${icon}`} style={{ color, fontSize: '1.25rem' }} />        </div>        <div style={{ flex: 1 }}>          <h3 style={{             margin: 0,             fontSize: '1.0625rem',             fontWeight: '600',             color: '#111827',            marginBottom: '0.125rem'          }}>            {nombre_cartera}          </h3>          <p style={{             margin: 0,             fontSize: '0.75rem',             color: '#9ca3af',            display: 'flex',            alignItems: 'center',            gap: '0.25rem'          }}>            <i className="fas fa-circle" style={{ fontSize: '0.375rem', color }} />            {getEstrategiaNombre()}          </p>        </div>      </div>      {/* Contenido espec√≠fico de la estrategia */}      <CardComponent data={data} />      {/* Botones de acci√≥n */}      <div style={{         marginTop: '1.25rem',         paddingTop: '1.25rem',         borderTop: '1px solid #e5e7eb',        display: 'flex',        flexDirection: 'column',        gap: '0.625rem'      }}>        <button          onClick={() => onAsignar(data)}          style={{            width: '100%',            padding: '0.75rem 1rem',            backgroundColor: color,            color: '#fff',            border: 'none',            borderRadius: '8px',            fontSize: '0.875rem',            fontWeight: '600',            cursor: 'pointer',            transition: 'all 0.2s',            display: 'flex',            alignItems: 'center',            justifyContent: 'center',            gap: '0.5rem'          }}          onMouseEnter={(e) => {            e.currentTarget.style.opacity = '0.9';            e.currentTarget.style.transform = 'translateY(-1px)';          }}          onMouseLeave={(e) => {            e.currentTarget.style.opacity = '1';            e.currentTarget.style.transform = 'translateY(0)';          }}        >          <i className="fas fa-coins" />          Asignar Liquidez        </button>        {onVerDetalle && (          <button            onClick={() => onVerDetalle(data)}            style={{              width: '100%',              padding: '0.75rem 1rem',              backgroundColor: '#f3f4f6',              color: '#374151',              border: '1px solid #d1d5db',              borderRadius: '8px',              fontSize: '0.875rem',              fontWeight: '500',              cursor: 'pointer',              transition: 'all 0.2s',              display: 'flex',              alignItems: 'center',              justifyContent: 'center',              gap: '0.5rem'            }}            onMouseEnter={(e) => {              e.currentTarget.style.backgroundColor = '#e5e7eb';              e.currentTarget.style.borderColor = '#9ca3af';            }}            onMouseLeave={(e) => {              e.currentTarget.style.backgroundColor = '#f3f4f6';              e.currentTarget.style.borderColor = '#d1d5db';            }}          >            <i className="fas fa-eye" />            Ver Detalle          </button>        )}      </div>    </div>  );}